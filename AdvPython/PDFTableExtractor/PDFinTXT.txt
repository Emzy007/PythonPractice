Class 
& 
Objects 
9:47 
AM 
Wednesday, 
March 
6, 
2024 
print(MyClass.x) 
class 
MyClass: pl=Mylass() 
X=10 
Class 
definition 
print(p1.x) 
Constructors:init_0 
"init_0function: 
o 
All 
classes 
have 
a 
function 
calledinit), 
which 
is 
always 
executed 
when 
the 
class 
is 
being 
initiated. 
o 
o 
The 
str 
(0 
function 
controls 
what 
should 
be 
returned 
0 
If 
the_str0function 
is 
not 
set, 
the 
string 
representation 
of 
the 
object 
is 
returned 
" 
The 
self 
Parameter: 
o 
The 
self 
parameter 
is 
a 
reference 
to 
the 
current 
instance 
of 
the 
class, 
and 
is 
used 
to 
access 
variables 
that 
belongs 
to 
the 
class. 
oIt 
does 
not 
have 
to 
be 
named 
self, 
you 
can 
call 
it 
whatever 
you 
like, 
but 
it 
has 
to 
be 
the 
first 
parameter 
of 
amy 
function 
in 
the 
class: 
The 
pass 
Statement: 
o 
class 
definitions 
cannot 
be 
empty, 
but 
if 
you 
for 
some 
reason 
have 
a 
class 
definition 
with 
no 
content, 
put 
in 
the 
pass 
statement 
to 
avoid 
getting 
error. 
o 
class 
Person: 
pass 
" 
Python 
Inheritance:Parent 
class 
alsO 
called 
base 
cla 
ss, 
Child 
class 
also 
called 
derived 
cla 
ss. 
o 
Syntax 
for 
inheritance: 
dass 
Child( 
Parent) 
: 
<body 
of 
the 
child 
class> 
init_(0 
" 
When 
you 
add 
the 
0function 
o 
The 
child's 
init 
()function 
o 
To 
keep 
the 
inheritance 
of 
the 
parent's 
init_) 
function, 
add 
a 
call 
to 
the 
parent'sinit) 
function 
" 
Use 
the 
super() 
Function: 
o 
Python 
also 
has 
a 
super() 
function 
that 
will 
make 
the 
child 
class 
inherit 
all 
the 
methods 
and 
pr 
o 
pe 
rties 
from 
its 
parent 
" 
f 
you 
add 
a 
methodin 
the 
child 
claSS 
with 
the 
same 
name 
as 
a 
function 
in 
the 
parent 
class, 
the 
inheritance 
of 
the 
parent 
method 
will 
be 
overridden. 
self: 
Self 
is 
a 
convention 
and 
not 
a 
Python 
keyword. 
Selfis 
a 
parameter 
in 
Instance 
Method 
a 
nd 
the 
user 
can 
use 
another 
parameter 
name 
in 
place 
of 
But 
it 
is 
advisable 
to 
use 
self 
beca 
use 
it 
increases 
the 
readability 
of 
code, 
and 
it 
is 
also 
a 
good 
programming 
practice. 
" 
Destructor 
isa 
special 
method 
which 
will 
be 
ivoked 
automatically 
when 
the 
object 
gets 
removed 
from 
the 
memory. 
o 
definit_(self,price, 
brand): 
self.price=price 
self.brand=brand 
defdel_(self): 
print('Deleting 
the 
object') 
p2=Product(7000,Samsung') 
pl=Product(10000,'Apple') 
del 
p1 
Method 
Function 
Is 
part 
of 
an 
object 
and 
represents 
the 
behavior 
of 
the 
object 
Is 
e 
block 
of 
code 
witha 
name 
Can 
be 
invoked 
only 
on 
an 
object, 
using 
dot 
operator. 
Without 
an 
object 
we 
It 
can 
be 
invoked 
using 
the 
name 
of 
the 
function 
and 
passing 
parameters 
Example: 
(1,2,3].reverse() 
Exampie: 
len([ 
A 
method 
must 
have 
at 
least 
one 
parameter 
: 
self 
Parameters 
are 
optional 
in 
a 
function 
Method 
invocation: 
Inbound 
& 
Outbound 
class 
Mobile: 
def_init_(self): 
print("Inside 
constructor") 
def 
purchase 
(self): 
print("Purchasing 
a 
mobile") 
mobl=Mobile() 
mobl.purchase
#inbound 
method 
invocation, 
We 
need 
not 
pass 
the 
value 
for 
self. 
Mobile.purc
#Outbound
method 
invocation
We 
have 
to 
pass 
the 
object 
as 
the 
value 
of 
self. 
The_init_() 
function 
is 
called 
a 
utomatical 
ly 
every 
time 
the 
class 
is 
being 
used 
to 
create 
a 
new 
object. 
The__str() 
Function: 
when 
the 
class 
object 
is 
represented 
as 
a 
string. 
function, 
the 
child 
class 
will 
no 
longer 
inherit 
thArent'sinit_() 
function. 
overrides 
the 
inheritance 
of 
the 
parent's 
init 
class 
Product: 
cannot 
invoke 
a 
method 
1,2,3]) 
Class 
& 
Objects 
9:47 
AM 
Wednesday, 
March 
6, 
2024 
print(MyClass.x) 
class 
MyClass: pl=Mylass() 
X=10 
Class 
definition 
print(p1.x) 
Constructors:init_0 
"init_0function: 
o 
All 
classes 
have 
a 
function 
calledinit), 
which 
is 
always 
executed 
when 
the 
class 
is 
being 
initiated. 
o 
o 
The 
str 
(0 
function 
controls 
what 
should 
be 
returned 
0 
If 
the_str0function 
is 
not 
set, 
the 
string 
representation 
of 
the 
object 
is 
returned 
" 
The 
self 
Parameter: 
o 
The 
self 
parameter 
is 
a 
reference 
to 
the 
current 
instance 
of 
the 
class, 
and 
is 
used 
to 
access 
variables 
that 
belongs 
to 
the 
class. 
oIt 
does 
not 
have 
to 
be 
named 
self, 
you 
can 
call 
it 
whatever 
you 
like, 
but 
it 
has 
to 
be 
the 
first 
parameter 
of 
amy 
function 
in 
the 
class: 
The 
pass 
Statement: 
o 
class 
definitions 
cannot 
be 
empty, 
but 
if 
you 
for 
some 
reason 
have 
a 
class 
definition 
with 
no 
content, 
put 
in 
the 
pass 
statement 
to 
avoid 
getting 
error. 
o 
class 
Person: 
pass 
" 
Python 
Inheritance:Parent 
class 
alsO 
called 
base 
cla 
ss, 
Child 
class 
also 
called 
derived 
cla 
ss. 
o 
Syntax 
for 
inheritance: 
dass 
Child( 
Parent) 
: 
<body 
of 
the 
child 
class> 
init_(0 
" 
When 
you 
add 
the 
0function 
o 
The 
child's 
init 
()function 
o 
To 
keep 
the 
inheritance 
of 
the 
parent's 
init_) 
function, 
add 
a 
call 
to 
the 
parent'sinit) 
function 
" 
Use 
the 
super() 
Function: 
o 
Python 
also 
has 
a 
super() 
function 
that 
will 
make 
the 
child 
class 
inherit 
all 
the 
methods 
and 
pr 
o 
pe 
rties 
from 
its 
parent 
" 
f 
you 
add 
a 
methodin 
the 
child 
claSS 
with 
the 
same 
name 
as 
a 
function 
in 
the 
parent 
class, 
the 
inheritance 
of 
the 
parent 
method 
will 
be 
overridden. 
self: 
Self 
is 
a 
convention 
and 
not 
a 
Python 
keyword. 
Selfis 
a 
parameter 
in 
Instance 
Method 
a 
nd 
the 
user 
can 
use 
another 
parameter 
name 
in 
place 
of 
But 
it 
is 
advisable 
to 
use 
self 
beca 
use 
it 
increases 
the 
readability 
of 
code, 
and 
it 
is 
also 
a 
good 
programming 
practice. 
" 
Destructor 
isa 
special 
method 
which 
will 
be 
ivoked 
automatically 
when 
the 
object 
gets 
removed 
from 
the 
memory. 
o 
definit_(self,price, 
brand): 
self.price=price 
self.brand=brand 
defdel_(self): 
print('Deleting 
the 
object') 
p2=Product(7000,Samsung') 
pl=Product(10000,'Apple') 
del 
p1 
Method 
Function 
Is 
part 
of 
an 
object 
and 
represents 
the 
behavior 
of 
the 
object 
Is 
e 
block 
of 
code 
witha 
name 
Can 
be 
invoked 
only 
on 
an 
object, 
using 
dot 
operator. 
Without 
an 
object 
we 
It 
can 
be 
invoked 
using 
the 
name 
of 
the 
function 
and 
passing 
parameters 
Example: 
(1,2,3].reverse() 
Exampie: 
len([ 
A 
method 
must 
have 
at 
least 
one 
parameter 
: 
self 
Parameters 
are 
optional 
in 
a 
function 
Method 
invocation: 
Inbound 
& 
Outbound 
class 
Mobile: 
def_init_(self): 
print("Inside 
constructor") 
def 
purchase 
(self): 
print("Purchasing 
a 
mobile") 
mobl=Mobile() 
mobl.purchase
#inbound 
method 
invocation, 
We 
need 
not 
pass 
the 
value 
for 
self. 
Mobile.purc
#Outbound
method 
invocation
We 
have 
to 
pass 
the 
object 
as 
the 
value 
of 
self. 
The_init_() 
function 
is 
called 
a 
utomatical 
ly 
every 
time 
the 
class 
is 
being 
used 
to 
create 
a 
new 
object. 
The__str() 
Function: 
when 
the 
class 
object 
is 
represented 
as 
a 
string. 
function, 
the 
child 
class 
will 
no 
longer 
inherit 
thArent'sinit_() 
function. 
overrides 
the 
inheritance 
of 
the 
parent's 
init 
class 
Product: 
cannot 
invoke 
a 
method 
1,2,3]) 
Class 
& 
Objects 
9:47 
AM 
Wednesday, 
March 
6, 
2024 
print(MyClass.x) 
class 
MyClass: pl=Mylass() 
X=10 
Class 
definition 
print(p1.x) 
Constructors:init_0 
"init_0function: 
o 
All 
classes 
have 
a 
function 
calledinit), 
which 
is 
always 
executed 
when 
the 
class 
is 
being 
initiated. 
o 
o 
The 
str 
(0 
function 
controls 
what 
should 
be 
returned 
0 
If 
the_str0function 
is 
not 
set, 
the 
string 
representation 
of 
the 
object 
is 
returned 
" 
The 
self 
Parameter: 
o 
The 
self 
parameter 
is 
a 
reference 
to 
the 
current 
instance 
of 
the 
class, 
and 
is 
used 
to 
access 
variables 
that 
belongs 
to 
the 
class. 
oIt 
does 
not 
have 
to 
be 
named 
self, 
you 
can 
call 
it 
whatever 
you 
like, 
but 
it 
has 
to 
be 
the 
first 
parameter 
of 
amy 
function 
in 
the 
class: 
The 
pass 
Statement: 
o 
class 
definitions 
cannot 
be 
empty, 
but 
if 
you 
for 
some 
reason 
have 
a 
class 
definition 
with 
no 
content, 
put 
in 
the 
pass 
statement 
to 
avoid 
getting 
error. 
o 
class 
Person: 
pass 
" 
Python 
Inheritance:Parent 
class 
alsO 
called 
base 
cla 
ss, 
Child 
class 
also 
called 
derived 
cla 
ss. 
o 
Syntax 
for 
inheritance: 
dass 
Child( 
Parent) 
: 
<body 
of 
the 
child 
class> 
init_(0 
" 
When 
you 
add 
the 
0function 
o 
The 
child's 
init 
()function 
o 
To 
keep 
the 
inheritance 
of 
the 
parent's 
init_) 
function, 
add 
a 
call 
to 
the 
parent'sinit) 
function 
" 
Use 
the 
super() 
Function: 
o 
Python 
also 
has 
a 
super() 
function 
that 
will 
make 
the 
child 
class 
inherit 
all 
the 
methods 
and 
pr 
o 
pe 
rties 
from 
its 
parent 
" 
f 
you 
add 
a 
methodin 
the 
child 
claSS 
with 
the 
same 
name 
as 
a 
function 
in 
the 
parent 
class, 
the 
inheritance 
of 
the 
parent 
method 
will 
be 
overridden. 
self: 
Self 
is 
a 
convention 
and 
not 
a 
Python 
keyword. 
Selfis 
a 
parameter 
in 
Instance 
Method 
a 
nd 
the 
user 
can 
use 
another 
parameter 
name 
in 
place 
of 
But 
it 
is 
advisable 
to 
use 
self 
beca 
use 
it 
increases 
the 
readability 
of 
code, 
and 
it 
is 
also 
a 
good 
programming 
practice. 
" 
Destructor 
isa 
special 
method 
which 
will 
be 
ivoked 
automatically 
when 
the 
object 
gets 
removed 
from 
the 
memory. 
o 
definit_(self,price, 
brand): 
self.price=price 
self.brand=brand 
defdel_(self): 
print('Deleting 
the 
object') 
p2=Product(7000,Samsung') 
pl=Product(10000,'Apple') 
del 
p1 
Method 
Function 
Is 
part 
of 
an 
object 
and 
represents 
the 
behavior 
of 
the 
object 
Is 
e 
block 
of 
code 
witha 
name 
Can 
be 
invoked 
only 
on 
an 
object, 
using 
dot 
operator. 
Without 
an 
object 
we 
It 
can 
be 
invoked 
using 
the 
name 
of 
the 
function 
and 
passing 
parameters 
Example: 
(1,2,3].reverse() 
Exampie: 
len([ 
A 
method 
must 
have 
at 
least 
one 
parameter 
: 
self 
Parameters 
are 
optional 
in 
a 
function 
Method 
invocation: 
Inbound 
& 
Outbound 
class 
Mobile: 
def_init_(self): 
print("Inside 
constructor") 
def 
purchase 
(self): 
print("Purchasing 
a 
mobile") 
mobl=Mobile() 
mobl.purchase
#inbound 
method 
invocation, 
We 
need 
not 
pass 
the 
value 
for 
self. 
Mobile.purc
#Outbound
method 
invocation
We 
have 
to 
pass 
the 
object 
as 
the 
value 
of 
self. 
The_init_() 
function 
is 
called 
a 
utomatical 
ly 
every 
time 
the 
class 
is 
being 
used 
to 
create 
a 
new 
object. 
The__str() 
Function: 
when 
the 
class 
object 
is 
represented 
as 
a 
string. 
function, 
the 
child 
class 
will 
no 
longer 
inherit 
thArent'sinit_() 
function. 
overrides 
the 
inheritance 
of 
the 
parent's 
init 
class 
Product: 
cannot 
invoke 
a 
method 
1,2,3]) 
